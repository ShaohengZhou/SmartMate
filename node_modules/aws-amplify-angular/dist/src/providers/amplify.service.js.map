{"version":3,"file":"amplify.service.js","sourceRoot":"","sources":["../../../src/providers/amplify.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAE/B,OAAO,OAAO,EAAE,EACd,MAAM,EAMP,MAAM,aAAa,CAAC;AAGrB,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;;IAe1C;0BAHqB,IAAI,OAAO,EAAa;gCAC1B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;QAG/C,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC;KAE3C;IAED,6BAAI,GAAJ,cAAoB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;IACxC,kCAAS,GAAT,cAA8B,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;IACvD,gCAAO,GAAP,cAA0B,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;IACjD,4BAAG,GAAH,cAAkB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;IACrC,qCAAY,GAAZ,cAAoC,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE;IAChE,8BAAK,GAAL,cAAe,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;IACpC,+BAAM,GAAN,cAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;IAEtC,kCAAS,GAAT,cAAc,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,qCAAY,GAAZ,UAAa,KAAgB,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;;gBAnChE,UAAU;;;;yBAjBX;;SAkBa,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport Amplify, {\n  Logger,\n  AuthClass,\n  AnalyticsClass,\n  StorageClass,\n  APIClass,\n  InteractionsClass\n} from 'aws-amplify';\n\nimport { AuthState } from './auth.state';\nimport { authDecorator } from './auth.decorator';\n\nconst logger = new Logger('AmplifyService');\n\n@Injectable()\nexport class AmplifyService {\n  private _auth: AuthClass;\n  private _analytics: AnalyticsClass;\n  private _storage: StorageClass;\n  private _api: APIClass;\n  private _cache: any;\n  private _pubsub: any;\n  private _interactions: InteractionsClass;\n\n  private _authState = new Subject<AuthState>();\n  authStateChange$ = this._authState.asObservable();\n\n  constructor() {\n    authDecorator(this._authState);\n\n    this._auth = Amplify.Auth;\n    this._analytics = Amplify.Analytics;\n    this._storage = Amplify.Storage;\n    this._api = Amplify.API;\n    this._cache = Amplify.Cache;\n    this._pubsub = Amplify.PubSub;\n    this._interactions = Amplify.Interactions;\n\n  }\n\n  auth(): AuthClass { return this._auth; }\n  analytics(): AnalyticsClass { return this._analytics; }\n  storage(): StorageClass { return this._storage; }\n  api(): APIClass { return this._api; }\n  interactions(): InteractionsClass { return this._interactions; }\n  cache(): any { return this._cache; }\n  pubsub(): any { return this._pubsub; }\n\n  authState() { return this._authState; }\n  setAuthState(state: AuthState) { this._authState.next(state); }\n}\n"]}