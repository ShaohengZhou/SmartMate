{"version":3,"file":"photo-picker.factory.js","sourceRoot":"","sources":["../../../../../src/components/storage/photo-picker-component/photo-picker.factory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,SAAS,EAAE,wBAAwB,EAAa,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE/H,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,cAAc,EAAE,MAAW,uBAAuB,CAAC;AAE5D,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;AAC3E,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;;IAsBvE,8BAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;sBAPvC,IAAI,YAAY,EAAU;sBAE1B,IAAI,YAAY,EAAU;wBAExB,IAAI,YAAY,EAAU;KAK1D;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,0CAAW,GAAX,eAAgB;IAGhB,4CAAa,GAAb;QAAA,iBAwBC;QAtBC,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,yBAAyB,EAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,wBAAwB,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;QAExP,IAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAE/G,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC7D,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACrD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC;QAE3E,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,CAAC;YACvC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACrB,CAAC,CAAC;QAEH,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,CAAC;YACvC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACrB,CAAC,CAAC;QAEH,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,CAAC;YACzC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,CAAC,CAAC;KAEJ;;gBAvDF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,iJAIC;iBACZ;;;;gBAf6C,wBAAwB;;;8BAiBnE,KAAK;wBACL,KAAK;yBACL,KAAK;2BACL,MAAM;2BAEN,MAAM;6BAEN,MAAM;kCAEN,SAAS,SAAC,yBAAyB;;+BA1BtC;;SAgBa,oBAAoB","sourcesContent":["import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, OnDestroy, Output, EventEmitter } from '@angular/core';\n\nimport { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';\nimport { ComponentMount }      from '../../component.mount';\nimport { PhotoPickerClass } from './photo-picker.class';\nimport { PhotoPickerIonicComponent } from './photo-picker.component.ionic';\nimport { PhotoPickerComponentCore } from './photo-picker.component.core';\n\n@Component({\n  selector: 'amplify-photo-picker',\n  template: `\n              <div class='amplify-component'>\n                <ng-template component-host></ng-template>\n              </div>\n            `\n})\nexport class PhotoPickerComponent implements OnInit, OnDestroy {\n  @Input() framework: string;\n  @Input() url: string;\n  @Input() path: string;\n  @Output()\n  picked: EventEmitter<string> = new EventEmitter<string>();\n  @Output()\n  loaded: EventEmitter<string> = new EventEmitter<string>();\n  @Output()\n  uploaded: EventEmitter<Object> = new EventEmitter<Object>();\n  @ViewChild(DynamicComponentDirective) componentHost: DynamicComponentDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { \n    \n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnDestroy() {}\n\n\n  loadComponent() {\n\n    let photoPickerComponent = this.framework && this.framework.toLowerCase() === 'ionic' ? new ComponentMount(PhotoPickerIonicComponent,{url: this.url, path: this.path}) : new ComponentMount(PhotoPickerComponentCore, {url: this.url, path: this.path});\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(photoPickerComponent.component);\n\n    const viewContainerRef = this.componentHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<PhotoPickerClass>componentRef.instance).data = photoPickerComponent.data;\n\n    componentRef.instance.picked.subscribe((e) => {\n      this.picked.emit(e);\n    });\n\n    componentRef.instance.loaded.subscribe((e) => {\n      this.loaded.emit(e);\n    });\n\n    componentRef.instance.uploaded.subscribe((e) => {\n      this.uploaded.emit(e);\n    });\n\n  }\n}\n"]}