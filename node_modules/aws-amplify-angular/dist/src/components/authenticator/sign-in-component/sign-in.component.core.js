import { Component, Input } from '@angular/core';
import { AmplifyService } from '../../../providers';
import { includes } from '../common';
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\">\n    <div class=\"amplify-form-body\">\n      <div class=\"amplify-form-header\">Sign in to your account</div>\n      <div class=\"amplify-amplify-form-row amplify-signin-username\">\n        <label class=\"amplify-input-label\" for=\"amplifyUsername\"> Username *</label>\n        <input\n          #amplifyUsername\n          (keyup)=\"setUsername($event.target.value)\"\n          class=\"amplify-form-input\"\n          type=\"text\"\n          required\n          placeholder=\"Username\"\n          [value]=\"username\"\n        />\n      </div>\n\n      <div class=\"amplify-form-row amplify-signin-password\">\n        <label class=\"amplify-input-label\" for=\"password\">Password *</label>\n        <input #password\n          (keyup)=\"setPassword(password.value)\"\n          (keyup.enter)=\"onSignIn()\"\n          class=\"amplify-form-input\"\n          type=\"password\"\n          required\n          placeholder=\"Enter your password\"\n        />\n        <span class=\"amplify-form-action\">Forgot Password?\n        <a class=\"amplify-form-link\"\n            (click)=\"onForgotPassword()\"\n          >Reset your password</a></span>    \n      </div>\n\n      <div class=\"amplify-form-actions\">\n\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            (click)=\"onSignIn()\"\n          >Sign In</button>\n        </div>\n\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-signup\">No account? <a class=\"amplify-form-link\" (click)=\"onSignUp()\">Create account</a></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ errorMessage }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n\n</div>\n";
var SignInComponentCore = /** @class */ (function () {
    function SignInComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
    }
    Object.defineProperty(SignInComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = includes(['signIn', 'signedOut', 'signedUp'], authState.state);
            this.username = authState.user ? authState.user.username || '' : '';
        },
        enumerable: true,
        configurable: true
    });
    SignInComponentCore.prototype.setUsername = function (username) {
        this.username = username;
    };
    SignInComponentCore.prototype.setPassword = function (password) {
        this.password = password;
    };
    SignInComponentCore.prototype.onSignIn = function () {
        var _this = this;
        this.amplifyService.auth().signIn(this.username, this.password)
            .then(function (user) {
            if (user['challengeName'] === 'SMS_MFA' || user['challengeName'] === 'SOFTWARE_TOKEN_MFA') {
                _this.amplifyService.setAuthState({ state: 'confirmSignIn', user: user });
            }
            else if (user['challengeName'] === 'NEW_PASSWORD_REQUIRED') {
                _this.amplifyService.setAuthState({ state: 'requireNewPassword', user: user });
            }
            else {
                _this.amplifyService.setAuthState({ state: 'signedIn', user: user });
            }
        })
            .catch(function (err) {
            _this._setError(err);
        });
    };
    SignInComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    SignInComponentCore.prototype.onForgotPassword = function () {
        var user = this.username ? { username: this.username } : null;
        this.amplifyService.setAuthState({ state: 'forgotPassword', user: user });
    };
    SignInComponentCore.prototype.onSignUp = function () {
        var user = this.username ? { username: this.username } : null;
        this.amplifyService.setAuthState({ state: 'signUp', user: user });
    };
    SignInComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
    };
    SignInComponentCore.decorators = [
        { type: Component, args: [{
                    selector: 'amplify-auth-sign-in-core',
                    template: template
                },] },
    ];
    /** @nocollapse */
    SignInComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, },
    ]; };
    SignInComponentCore.propDecorators = {
        "authState": [{ type: Input },],
    };
    return SignInComponentCore;
}());
export { SignInComponentCore };
//# sourceMappingURL=sign-in.component.core.js.map