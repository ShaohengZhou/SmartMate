{"version":3,"file":"sign-in.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/sign-in-component/sign-in.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AmplifyService, AuthState } from '../../../providers';\nimport { includes } from '../common';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\">\n    <div class=\"amplify-form-body\">\n      <div class=\"amplify-form-header\">Sign in to your account</div>\n      <div class=\"amplify-amplify-form-row amplify-signin-username\">\n        <label class=\"amplify-input-label\" for=\"amplifyUsername\"> Username *</label>\n        <input\n          #amplifyUsername\n          (keyup)=\"setUsername($event.target.value)\"\n          class=\"amplify-form-input\"\n          type=\"text\"\n          required\n          placeholder=\"Username\"\n          [value]=\"username\"\n        />\n      </div>\n\n      <div class=\"amplify-form-row amplify-signin-password\">\n        <label class=\"amplify-input-label\" for=\"password\">Password *</label>\n        <input #password\n          (keyup)=\"setPassword(password.value)\"\n          (keyup.enter)=\"onSignIn()\"\n          class=\"amplify-form-input\"\n          type=\"password\"\n          required\n          placeholder=\"Enter your password\"\n        />\n        <span class=\"amplify-form-action\">Forgot Password?\n        <a class=\"amplify-form-link\"\n            (click)=\"onForgotPassword()\"\n          >Reset your password</a></span>    \n      </div>\n\n      <div class=\"amplify-form-actions\">\n\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            (click)=\"onSignIn()\"\n          >Sign In</button>\n        </div>\n\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-signup\">No account? <a class=\"amplify-form-link\" (click)=\"onSignUp()\">Create account</a></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ errorMessage }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n\n</div>\n`\n\n@Component({\n  selector: 'amplify-auth-sign-in-core',\n  template: template\n})\nexport class SignInComponentCore {\n  _authState: AuthState;\n  _show: boolean;\n  username: string;\n  password: string;\n  errorMessage: string;\n  amplifyService: AmplifyService;\n\n  constructor(amplifyService: AmplifyService) {\n    this.amplifyService = amplifyService;\n  }\n\n  @Input()\n  set authState(authState: AuthState) {\n    this._authState = authState;\n    this._show = includes(['signIn', 'signedOut', 'signedUp'], authState.state);\n    this.username = authState.user? authState.user.username || '' : '';\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  onSignIn() {\n    this.amplifyService.auth().signIn(this.username, this.password)\n      .then(user => {\n        if (user['challengeName'] === 'SMS_MFA' || user['challengeName'] === 'SOFTWARE_TOKEN_MFA') {\n          this.amplifyService.setAuthState({ state: 'confirmSignIn', user: user });\n        } else if (user['challengeName'] === 'NEW_PASSWORD_REQUIRED') {\n          this.amplifyService.setAuthState({ state: 'requireNewPassword', user: user });\n        } else {\n          this.amplifyService.setAuthState({ state: 'signedIn', user: user });\n        }\n      })\n      .catch((err) => {\n        this._setError(err);\n      });\n  }\n\n  onAlertClose() {\n    this._setError(null);\n  }\n\n  onForgotPassword() {\n    const user = this.username? { username: this.username } : null;\n    this.amplifyService.setAuthState({ state: 'forgotPassword', user: user });\n  }\n\n  onSignUp() {\n    const user = this.username? { username: this.username } : null;\n    this.amplifyService.setAuthState({ state: 'signUp', user: user });\n  }\n\n  _setError(err) {\n    if (!err) {\n      this.errorMessage = null;\n      return;\n    }\n\n    this.errorMessage = err.message || err;\n  }\n}\n"]}